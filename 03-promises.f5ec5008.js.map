{"mappings":"qhBAEA,IAAAA,EAAAC,EAAA,SAEcC,SAASC,cAAc,UACxBD,SAASC,cAAc,SAyBrB,SAANC,EAAcC,EAAUC,GACf,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEK,SAAAR,EAAUS,MAAAR,IAEpBG,EAAO,CAAEI,SAAAR,EAAUS,MAAAR,GAAQ,GAE5BA,EAAM,IAMRS,MAAK,EAACF,SAAEA,EAAUC,MAAAE,MACjBC,EAAAjB,GAASkB,OAAOC,QAAQ,qBAAqBN,QAAeG,MAAU,IAEvEI,OAAM,EAACP,SAAEA,EAAUC,MAAAO,MAClBJ,EAAAjB,GAASkB,OAAOI,QAAQ,oBAAoBT,QAAeQ,MAAU,G,CA1C9DnB,SAASC,cAAc,SAC/BoB,iBAAiB,UAIP,SAAQC,GACrBA,EAAMC,iBAGwB,MAAxBC,EAAaC,OAAOH,EAAMI,cAAcC,SAASf,MAAMgB,OACvDC,EAAYJ,OAAOH,EAAMI,cAAcC,SAASG,KAAKF,OACrDG,EAAcN,OAAOH,EAAMI,cAAcC,SAASK,OAAOJ,OAIlD,IAAR,IAAIK,EAAI,EAAGA,EAAIF,EAAaE,IAAK,CAEpC/B,EAAc+B,EAAI,EADAA,EAAIJ,EAAYL,E","sources":["src/js/03-promises.js"],"sourcesContent":["// Напиши скрипт, який на момент сабміту форми викликає функцію createPromise(position, delay) стільки разів, скільки ввели в поле amount. Під час кожного виклику передай їй номер промісу (position), що створюється, і затримку, враховуючи першу затримку (delay), введену користувачем, і крок (step).\n\nimport Notiflix from 'notiflix';\n\nconst delay = document.querySelector('.delay');\nconst step = document.querySelector('.step');\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onSubmitClick);\n\n// Функція для клика\n\nfunction onSubmitClick(event) {\n  event.preventDefault();\n  // Пишемо значення інпутов у перемені\n\n  const delayValue = Number(event.currentTarget.elements.delay.value);\n  const stepValue = Number(event.currentTarget.elements.step.value);\n  const amountValue = Number(event.currentTarget.elements.amount.value);\n\n  // створюємо цикл\n\n  for (let i = 0; i < amountValue; i++) {\n    const stepDelay = i * stepValue + delayValue;\n    createPromise(i + 1, stepDelay);\n  }\n}\n\n// створюємо проміс\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  // повертаємо повідомлення о результаті проміса\n\n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$eWCmQ","parcelRequire","document","querySelector","$47d4ff9957288465$var$createPromise","position1","delay1","Promise","resolve","reject","setTimeout","Math","random","position","delay","then","delay2","$parcel$interopDefault","Notify","success","catch","delay3","failure","addEventListener","event","preventDefault","delayValue","Number","currentTarget","elements","value","stepValue","step","amountValue","amount","i"],"version":3,"file":"03-promises.f5ec5008.js.map"}